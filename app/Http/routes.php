<?php

/**
 * ShootProof API
 * This is documentation for a simple photo upload and management web application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: john@johnplaxco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * ShootProof API
 * @version 1.0.0
 */

$app->get('/', function () use ($app) {
    return $app->version();
});

/**
 * post addAlbum
 * Summary: Creates a new album in the gallery
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->post('/v1/album', 'AlbumApi@addAlbum');
/**
 * put albumAlbumUUIDPut
 * Summary: Update an existing album&#39;s description
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->put('/v1/album/{albumUUID}', 'AlbumApi@albumAlbumUUIDPut');
/**
 * delete deleteAlbum
 * Summary: Deletes an album.
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->delete('/v1/album/{albumUUID}', 'AlbumApi@deleteAlbum');
/**
 * put galleryGalleryUUIDPut
 * Summary: Update an existing gallery&#39;s description
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->put('/v1/gallery/{galleryUUID}', 'AlbumApi@galleryGalleryUUIDPut');
/**
 * delete photoAlbumDelete
 * Summary: Remove a photo from an album
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->delete('/v1/photo_album', 'AlbumApi@photoAlbumDelete');
/**
 * post photoAlbumPost
 * Summary: Add a photo entry to an album
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->post('/v1/photo_album', 'AlbumApi@photoAlbumPost');
/**
 * post addGallery
 * Summary: Creates a new gallery
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->post('/v1/gallery', 'GalleryApi@addGallery');
/**
 * delete deleteGallery
 * Summary: Deletes a gallery.
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->delete('/v1/gallery/{galleryUUID}', 'GalleryApi@deleteGallery');
/**
 * post addPhoto
 * Summary: Add a new photo entry to a gallery
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->post('/v1/photo', 'PhotoApi@addPhoto');
/**
 * get photoFindByAlbumUUIDGet
 * Summary: Find photos by album
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->get('/v1/photo/findByAlbumUUID', 'PhotoApi@photoFindByAlbumUUIDGet');
/**
 * get findPhotosByGallery
 * Summary: Finds photos by gallery
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->get('/v1/photo/findByGalleryUUID', 'PhotoApi@findPhotosByGallery');
/**
 * delete deletePhoto
 * Summary: Deletes a photo entry and its associated image.
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->delete('/v1/photo/{photoUUID}', 'PhotoApi@deletePhoto');
/**
 * get getPhotoByUUID
 * Summary: Find photo by ID
 * Notes: Returns a single photo&#39;s metadata
 * Output-Formats: [application/xml, application/json]
 */
$app->get('/v1/photo/{photoUUID}', 'PhotoApi@getPhotoByUUID');
/**
 * put updatePhoto
 * Summary: Update an existing photo
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->put('/v1/photo/{photoUUID}', 'PhotoApi@updatePhoto');
/**
 * post uploadFile
 * Summary: Uploads an image
 * Notes: 
 * Output-Formats: [application/json]
 */
$app->post('/v1/photo/{photoUUID}/uploadImage', 'PhotoApi@uploadFile');
/**
 * delete photoAlbumDelete
 * Summary: Remove a photo from an album
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->delete('/v1/photo_album', 'PhotoApi@photoAlbumDelete');
/**
 * post photoAlbumPost
 * Summary: Add a photo entry to an album
 * Notes: 
 * Output-Formats: [application/xml, application/json]
 */
$app->post('/v1/photo_album', 'PhotoApi@photoAlbumPost');

