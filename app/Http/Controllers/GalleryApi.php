<?php

/**
 * ShootProof API
 * This is documentation for a simple photo upload and management web application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: john@johnplaxco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class GalleryApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    //TODO move this to a service, use the db to generate it, whatever. Don't copy-paste it everywhere.
    private static function uuid() {
      $data = openssl_random_pseudo_bytes(16);
      $data[6] = chr(ord($data[6]) & 0x0f | 0x40);
      $data[8] = chr(ord($data[8]) & 0x3f | 0x80);

       return vsprintf('%s%s-%s-%s-%s-%s%s%s', str_split(bin2hex($data), 4));
    }

    /**
     * Operation addGallery
     *
     * Creates a new gallery.
     *
     *
     * @return Http response
     */
    public function addGallery()
    {
        $input = Request::all();

        //path params validation

        //not path params validation
        if (!isset($input['name'])) {
            throw new \InvalidArgumentException('Missing the required parameter $name when calling addGallery');
        }

        $uuid = GalleryApi::uuid();

        $result = app('db')->table('galleries')->insert(['uuid'=>$uuid, 'name'=>$input['name']]);

        return response(json_encode(['uuid'=>$uuid, 'name'=>$input['name']]));
    }
    /**
     * Operation deleteGallery
     *
     * Deletes a gallery..
     *
     * @param string $gallery_uuid Gallery UUID to delete (required)
     *
     * @return Http response
     */
    public function deleteGallery($gallery_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $result = app('db')->table('galleries')->where('uuid', '=', $gallery_uuid)->delete();
        if (!$result) {
          return response(json_encode(['code'=>404, 'type'=>'missing gallery', 'message'=>'gallery not found']), 404);
        }
        return response('operation successful');
    }
}
