<?php

/**
 * ShootProof API
 * This is documentation for a simple photo upload and management web application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: john@johnplaxco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class AlbumApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addAlbum
     *
     * Creates a new album in the gallery.
     *
     *
     * @return Http response
     */
    public function addAlbum()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addAlbum');
        }
        $body = $input['body'];


        return response('How about implementing addAlbum as a post method ?');
    }
    /**
     * Operation albumAlbumUUIDPut
     *
     * Update an existing album's description.
     *
     * @param string $album_uuid  (required)
     *
     * @return Http response
     */
    public function albumAlbumUUIDPut($album_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing albumAlbumUUIDPut as a put method ?');
    }
    /**
     * Operation deleteAlbum
     *
     * Deletes an album..
     *
     * @param string $album_uuid Album UUID to delete (required)
     *
     * @return Http response
     */
    public function deleteAlbum($album_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteAlbum as a delete method ?');
    }
    /**
     * Operation galleryGalleryUUIDPut
     *
     * Update an existing gallery's description.
     *
     * @param string $gallery_uuid  (required)
     *
     * @return Http response
     */
    public function galleryGalleryUUIDPut($gallery_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing galleryGalleryUUIDPut as a put method ?');
    }
    /**
     * Operation photoAlbumDelete
     *
     * Remove a photo from an album.
     *
     *
     * @return Http response
     */
    public function photoAlbumDelete()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['photo_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $photo_uuid when calling photoAlbumDelete');
        }
        $photo_uuid = $input['photo_uuid'];

        if (!isset($input['album_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $album_uuid when calling photoAlbumDelete');
        }
        $album_uuid = $input['album_uuid'];


        return response('How about implementing photoAlbumDelete as a delete method ?');
    }
    /**
     * Operation photoAlbumPost
     *
     * Add a photo entry to an album.
     *
     *
     * @return Http response
     */
    public function photoAlbumPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['photo_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $photo_uuid when calling photoAlbumPost');
        }
        $photo_uuid = $input['photo_uuid'];

        if (!isset($input['album_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $album_uuid when calling photoAlbumPost');
        }
        $album_uuid = $input['album_uuid'];


        return response('How about implementing photoAlbumPost as a post method ?');
    }
}
