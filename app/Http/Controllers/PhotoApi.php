<?php

/**
 * ShootProof API
 * This is documentation for a simple photo upload and management web application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: john@johnplaxco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class PhotoApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addPhoto
     *
     * Add a new photo entry to a gallery.
     *
     *
     * @return Http response
     */
    public function addPhoto()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addPhoto');
        }
        $body = $input['body'];


        return response('How about implementing addPhoto as a post method ?');
    }
    /**
     * Operation photoFindByAlbumUUIDGet
     *
     * Find photos by album.
     *
     *
     * @return Http response
     */
    public function photoFindByAlbumUUIDGet()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['album_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $album_uuid when calling photoFindByAlbumUUIDGet');
        }
        $album_uuid = $input['album_uuid'];


        return response('How about implementing photoFindByAlbumUUIDGet as a get method ?');
    }
    /**
     * Operation findPhotosByGallery
     *
     * Finds photos by gallery.
     *
     *
     * @return Http response
     */
    public function findPhotosByGallery()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['gallery_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $gallery_uuid when calling findPhotosByGallery');
        }
        $gallery_uuid = $input['gallery_uuid'];


        return response('How about implementing findPhotosByGallery as a get method ?');
    }
    /**
     * Operation deletePhoto
     *
     * Deletes a photo entry and its associated image..
     *
     * @param string $photo_uuid Photo uuid to delete (required)
     *
     * @return Http response
     */
    public function deletePhoto($photo_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deletePhoto as a delete method ?');
    }
    /**
     * Operation getPhotoByUUID
     *
     * Find photo by ID.
     *
     * @param string $photo_uuid UUID of photo to return (required)
     *
     * @return Http response
     */
    public function getPhotoByUUID($photo_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPhotoByUUID as a get method ?');
    }
    /**
     * Operation updatePhoto
     *
     * Update an existing photo.
     *
     * @param string $photo_uuid The UUID of the photo entry to update (required)
     *
     * @return Http response
     */
    public function updatePhoto($photo_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updatePhoto as a put method ?');
    }
    /**
     * Operation uploadFile
     *
     * Uploads an image.
     *
     * @param string $photo_uuid ID of photo entry to update (required)
     *
     * @return Http response
     */
    public function uploadFile($photo_uuid)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing uploadFile as a post method ?');
    }
    /**
     * Operation photoAlbumDelete
     *
     * Remove a photo from an album.
     *
     *
     * @return Http response
     */
    public function photoAlbumDelete()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['photo_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $photo_uuid when calling photoAlbumDelete');
        }
        $photo_uuid = $input['photo_uuid'];

        if (!isset($input['album_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $album_uuid when calling photoAlbumDelete');
        }
        $album_uuid = $input['album_uuid'];


        return response('How about implementing photoAlbumDelete as a delete method ?');
    }
    /**
     * Operation photoAlbumPost
     *
     * Add a photo entry to an album.
     *
     *
     * @return Http response
     */
    public function photoAlbumPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['photo_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $photo_uuid when calling photoAlbumPost');
        }
        $photo_uuid = $input['photo_uuid'];

        if (!isset($input['album_uuid'])) {
            throw new \InvalidArgumentException('Missing the required parameter $album_uuid when calling photoAlbumPost');
        }
        $album_uuid = $input['album_uuid'];


        return response('How about implementing photoAlbumPost as a post method ?');
    }
}
